# Bot Overview

Bots are software applications designed to interact with users via text-based conversations. They function based on specific rules to answer questions or conduct particular tasks. AI-powered bots leverage artificial intelligence to comprehend natural language, handle complex conversations, and manage numerous tasks, ranging from basic scripts to advanced AI systems which adapt and learn. Bots can be utilized as virtual assistants in Microsoft Teams and Microsoft 365.

Bot applications provide numerous business advantages such as:

1. **Automation**: Bots perform repetitive tasks, saving valuable time and effort.
2. **Availability**: They have the ability to work 24/7 without breaks.
3. **Efficiency**: Bots can manage multiple tasks at once, enhancing overall efficiency.
4. **Customer Engagement**: They can interact with customers and provide immediate responses and support.
5. **Scalability**: Bots can be expanded to handle more tasks or interactions as users' needs develop.

## Understanding Bot Functioning

Teams bots function either by following a set of rules or leveraging AI to comprehend and respond to user requests. For instance, when a user sends a message to the bot, it processes the input, identifies the users' needs, and provides an appropriate response or performs an action.

Here's an example of a simple Teams bot that takes short commands from a user:

![Graphical representation shows the user experience in a chat bot.](https://learn.microsoft.com/en-us/microsoftteams/platform/assets/images/bots/chat-bot-ux.gif)

## Developer Experience with Bots

Let's consider an instance where as a developer, your task is to build a bot that can automate repetitive tasks and improve efficiency and user engagement. The image below illustrates how a bot app can be developed to meet user requirements:

![Image shows developer experience for a chatbot.](https://learn.microsoft.com/en-us/microsoftteams/platform/assets/images/bots/chatbot-dev-ux.png)

## Bot Development Basics

Let's examine basic components of a bot and how they collaborate to create an effective bot within Teams:

- **Activity handler**: This manages and processes events or activities generated by user interactions with a bot.

- **Event**: This is a triggered occurrence when a user interacts with a bot which can make a bot respond or take appropriate action.

- **Conversation**: This is the interactive exchange between a user and a bot, involving user inputs, bot responses, and the context of the conversation.

- **Bot logic**: This works with the activity handler to dictate the bot's responses.

- **Bot scope**: This refers to the bot's capabilities and how it interacts with users within Microsoft Teams.

## Bot Capabilities

The bot app can have one or more of the following abilities, built utilizing either the Bot Framework SDK or Teams AI library with Teams Toolkit:

- **Custom engine agent**: It uses AI to perform activities like understanding natural language, engaging in conversations, and answering questions.

- **Conversational bot**: It simulates interactions with users, enabling them to engage with a web service.

- **Notification bot**: This bot sends alerts to users in Teams channels, group chats, or personal chats.

- **Workflow bot**: It automates and streamlines business processes.

- **Command bot**: This bot automates responses for simple commands in a chat.

## Next Steps

> [!div class="nextstepaction"]
> [Types of bots](build-a-bot.md)
